 ID = "velohero"
    DisplayName = "Velo Hero"
    DisplayAbbreviation = "VH"
    _urlRoot = "http://app.velohero.com"
    _urlRoot = "https://app.velohero.com"
    AuthenticationType = ServiceAuthenticationType.UsernamePassword
    RequiresExtendedAuthorizationDetails = True
    ReceivesStationaryActivities = False

    SupportsHR = SupportsCadence = SupportsTemp = SupportsPower = True

    # http://app.velohero.com/sports/list?view=json
    # https://app.velohero.com/sports/list?view=json
    # For mapping common -> Velo Hero
    _activityMappings = {
        ActivityType.Cycling: "1",
@@ -68,6 +68,8 @@ class VeloHeroService(ServiceBase):
    }
    SupportedActivities = list(_activityMappings.keys())

    _obligatory_headers = {'user-agent': 'tapiriik.com/1.0'}

    def _add_auth_params(self, params=None, record=None):
        """
        Adds username and password to the passed-in params,
@@ -94,7 +96,7 @@ def Authorize(self, email, password):
        """
        POST Username and Password
        URL: http://app.velohero.com/sso
        URL: https://app.velohero.com/sso
        Parameters:
        user = username
        pass = password
@@ -107,7 +109,8 @@ def Authorize(self, email, password):
        from tapiriik.auth.credential_storage import CredentialStore

        res = requests.post(self._urlRoot + "/sso",
                           params={'user': email, 'pass': password, 'view': 'json'})
                            headers=self._obligatory_headers,
                            params={'user': email, 'pass': password, 'view': 'json'})

        if res.status_code != 200:
            raise APIException("Invalid login", block=True, user_exception=UserException(UserExceptionType.Authorization, intervention_required=True))
@@ -143,7 +146,7 @@ def DownloadActivityList(self, serviceRecord, exhaustive=False):
        """
        GET List of Activities as JSON File
        URL: http://app.velohero.com/export/workouts/json
        URL: https://app.velohero.com/export/workouts/json
        Parameters:
        user      = username
        pass      = password
@@ -167,7 +170,9 @@ def DownloadActivityList(self, serviceRecord, exhaustive=False):

        params.update({"date_from": listStart.strftime(limitDateFormat), "date_to": listEnd.strftime(limitDateFormat)})
        logger.debug("Requesting %s to %s" % (listStart, listEnd))
        res = requests.get(self._urlRoot + "/export/workouts/json", params=params)
        res = requests.get(self._urlRoot + "/export/workouts/json",
                           headers=self._obligatory_headers,
                           params=params)

        if res.status_code != 200:
          if res.status_code == 403:
@@ -222,7 +227,7 @@ def DownloadActivity(self, serviceRecord, activity):
        """
        GET Activity as a PWX File
        URL: http://app.velohero.com/export/activity/pwx/<WORKOUT-ID>
        URL: https://app.velohero.com/export/activity/pwx/<WORKOUT-ID>
        Parameters:
        user = username
        pass = password
@@ -233,7 +238,9 @@ def DownloadActivity(self, serviceRecord, activity):
        workoutId = activity.ServiceData["workoutId"]
        logger.debug("Download PWX export with ID: " + str(workoutId))
        params = self._add_auth_params({}, record=serviceRecord)
        res = requests.get(self._urlRoot + "/export/activity/pwx/{}".format(workoutId), params=params)
        res = requests.get(self._urlRoot + "/export/activity/pwx/{}".format(workoutId),
                           headers=self._obligatory_headers,
                           params=params)

        if res.status_code != 200:
          if res.status_code == 403:
@@ -249,7 +256,7 @@ def UploadActivity(self, serviceRecord, activity):
        """
        POST a Multipart-Encoded File
        
        URL: http://app.velohero.com/upload/file
        URL: https://app.velohero.com/upload/file
        Parameters:
        user = username
        pass = password
@@ -286,7 +293,10 @@ def UploadActivity(self, serviceRecord, activity):
        # Upload
        files = {"file": ("tap-sync-" + str(os.getpid()) + "-" + activity.UID + "." + format, data)}
        params = self._add_auth_params({"view":"json"}, record=serviceRecord)
        res = requests.post(self._urlRoot + "/upload/file", files=files, params=params)
        res = requests.post(self._urlRoot + "/upload/file",
                            headers=self._obligatory_headers,
                            files=files,
                            params=params)

        if res.status_code != 200:
            if res.status_code == 403:
@@ -312,7 +322,9 @@ def UploadActivity(self, serviceRecord, activity):
                "sport_id" : self._activityMappings[activity.Type],
                "workout_hide": "yes" if activity.Private else "no"
            }, record=serviceRecord)
            res = requests.get(self._urlRoot + "/workouts/change/{}".format(workoutId), params=params)
            res = requests.get(self._urlRoot + "/workouts/change/{}".format(workoutId),
                               headers=self._obligatory_headers,
                               params=params)
            if res.status_code != 200:
                if res.status_code == 403:
                    raise APIException("No authorization to change activity with workout ID: {}".format(workoutId), block=True, user_exception=UserException(UserExceptionType.Authorization, intervention_required=True))
